{"version":3,"sources":["components/SpriteTile.js","components/Search.js","icons/InfoIcon.js","components/Footer.js","helpers/compHeights.js","components/CompDisplay.js","components/CompSelector.js","App.js","serviceWorker.js","index.js"],"names":["SpriteTile","pokemon","setPokedex","displayId","id","length","Col","className","onClick","tabIndex","onKeyDown","event","key","src","sprite","name","Badge","pill","variant","Search","display","setDisplay","options","search","setSearch","Row","InputGroup","FormControl","placeholder","value","onChange","target","filter","toLowerCase","indexOf","map","index","InfoIcon","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","cx","cy","r","Footer","compHeights","pikachu","boy","girl","shaq","giraffe","CompDisplay","selectedComp","customHeight","useState","dimensions","setDimensions","dimFetched","setDimFetched","useEffect","pokemonUrl","url","img","Image","onload","this","checkDimensions","compHeight","compPath","pokemonWidth","humanWidth","pikachuDimensions","pokemonHeight","humanPixels","Container","rounded","style","CompSelector","heightInputPlaceholder","setSelectedComp","setCustomHeight","setAlert","units","setUnits","heightFeet","setHeightFeet","heightInches","setHeightInches","heightCm","setHeightCm","disabled","setDisabled","convertToInches","centimeters","totalInches","Math","round","feet","floor","inches","handleCompChange","convertedHeight","handleInputChange","inputNumber","validity","valid","handleInputClick","handleSubmit","triggerAlert","convertToCm","setTimeout","displayUnits","marginBottom","DropdownButton","title","drop","marginRight","Dropdown","Item","pattern","max","Append","Button","zIndex","App","setOptions","selectedPokemon","setSelectedPokemon","loading","isLoading","alert","fetchPokemon","document","addEventListener","handleClickOutside","removeEventListener","content","a","promises","Array","fetch","Promise","all","then","pokemonArr","response","json","sprites","front_default","capitalizedName","charAt","toUpperCase","slice","push","sort","b","Spinner","animation","Alert","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a69748f3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Image, Badge } from \"react-bootstrap\";\n\nconst SpriteTile = ({ pokemon, setPokedex }) => {\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      setPokedex(pokemon);\n    }\n  };\n\n  let displayId = \"\" + pokemon.id;\n  while (displayId.length < 3) {\n    displayId = \"0\" + displayId;\n  }\n\n  return (\n    <Col\n      className=\"align-center mb-4\"\n      onClick={() => setPokedex(pokemon)}\n      tabIndex=\"0\"\n      onKeyDown={handleKeyDown}\n    >\n      <Image className=\"sprite\" src={pokemon.sprite} />\n      <div className=\"mb-2\">{pokemon.name}</div>\n      <Badge className=\"number-badge\" pill variant=\"light\">\n        {displayId}\n      </Badge>\n    </Col>\n  );\n};\n\nexport default SpriteTile;\n","import React from \"react\";\nimport { Row, InputGroup, FormControl } from \"react-bootstrap\";\nimport SpriteTile from \"./SpriteTile\";\n\nconst Search = ({\n  display,\n  setDisplay,\n  options,\n  search,\n  setSearch,\n  setPokedex,\n}) => {\n  const handleClick = () => {\n    setDisplay(true);\n    setSearch(\"\");\n  };\n\n  return (\n    <>\n      <Row>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Search Pokemon\"\n            id=\"search\"\n            value={search}\n            onChange={(event) => setSearch(event.target.value)}\n            onClick={handleClick}\n          />\n        </InputGroup>\n      </Row>\n      {display && (\n        <Row className=\"options-container\">\n          {options\n            .filter(\n              ({ name }) =>\n                name.toLowerCase().indexOf(search.toLowerCase()) > -1\n            )\n            .map((value, index) => {\n              return (\n                <SpriteTile\n                  key={index}\n                  pokemon={value}\n                  setPokedex={setPokedex}\n                />\n              );\n            })}\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst InfoIcon = () => (\n  <svg\n    className=\"bi bi-info-circle\"\n    width=\"0.7em\"\n    height=\"0.7em\"\n    viewBox=\"0 0 16 16\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\"\n      clipRule=\"evenodd\"\n    />\n    <path d=\"M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588z\" />\n    <circle cx=\"8\" cy=\"4.5\" r=\"1\" />\n  </svg>\n);\n\nexport default InfoIcon;\n","import React from \"react\";\nimport InfoIcon from \"../icons/InfoIcon\";\n\nconst Footer = () => {\n  return (\n    <div className=\"d-flex footer justify-content-between py-3 bg-dark\">\n      <span className=\"invisible\">a</span>\n      HeightDex\n      <div className=\"align-self-center finger\">\n        <InfoIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","const compHeights = {\n  pikachu: 40,\n  boy: 165,\n  girl: 155,\n  shaq: 216,\n  giraffe: 533,\n};\n\nexport default compHeights;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Image as RBImage, Col } from \"react-bootstrap\";\nimport compHeights from \"../helpers/compHeights\";\n\nconst CompDisplay = ({ pokemon, selectedComp, customHeight }) => {\n  const [dimensions, setDimensions] = useState({});\n  const [dimFetched, setDimFetched] = useState(false);\n  const { name, height } = pokemon;\n\n  useEffect(() => {\n    setDimFetched(false);\n  }, [pokemon.name]);\n\n  function checkDimensions(url) {\n    var img = new Image();\n    img.onload = function () {\n      setDimensions({\n        width: this.width,\n        height: this.height,\n      });\n    };\n    img.src = url;\n    return img;\n  }\n\n  let pokemonUrl = \"https://img.pokemondb.net/artwork/pikachu.jpg\";\n  if (name) {\n    if (name === \"Mimikyu-disguised\") {\n      pokemonUrl = `https://img.pokemondb.net/artwork/mimikyu.jpg`;\n    } else {\n      pokemonUrl = `https://img.pokemondb.net/artwork/${name.toLowerCase()}.jpg`;\n    }\n    if (!dimFetched) {\n      checkDimensions(pokemonUrl);\n      setDimFetched(true);\n    }\n  }\n\n  const pikachuDimensions = { width: 360, height: 337 };\n\n  const pokemonHeight = height * 10;\n  let compHeight;\n  let compPath;\n  if (selectedComp === \"Boy\") {\n    compPath = \"/images/boy.jpg\";\n    compHeight = customHeight > 0 ? customHeight : compHeights.boy;\n  } else if (selectedComp === \"Girl\") {\n    compPath = \"/images/girl.jpg\";\n    compHeight = customHeight > 0 ? customHeight : compHeights.girl;\n  } else if (selectedComp === \"Shaq\") {\n    compPath = \"/images/shaq.jpg\";\n    compHeight = compHeights.shaq;\n  } else if (selectedComp === \"Giraffe\") {\n    compPath = \"/images/giraffe.jpg\";\n    compHeight = compHeights.giraffe;\n  }\n\n  let pokemonWidth;\n  let humanWidth;\n  if (!pokemonHeight) {\n    let humanPixels =\n      pikachuDimensions.height * (compHeight / compHeights.pikachu);\n    pokemonWidth =\n      pikachuDimensions.width / (pikachuDimensions.width + humanPixels);\n    humanWidth = 1 - pokemonWidth;\n  } else {\n    let humanPixels = dimensions.height * (compHeight / pokemonHeight);\n    pokemonWidth = dimensions.width / (dimensions.width + humanPixels);\n    humanWidth = 1 - pokemonWidth;\n  }\n\n  return (\n    <Container className=\"cont\">\n      <Row className=\"d-flex mx-auto\">\n        <Col className=\"d-flex justify-content-center align-items-end\">\n          <RBImage\n            src={compPath}\n            rounded\n            style={{\n              width: `${humanWidth * 90}%`,\n            }}\n          />\n          <RBImage\n            src={pokemonUrl}\n            rounded\n            style={{\n              width: `${pokemonWidth * 90}%`,\n            }}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CompDisplay;\n","import React, { useState } from \"react\";\nimport {\n  Container,\n  Button,\n  DropdownButton,\n  Dropdown,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport compHeights from \"../helpers/compHeights\";\n\nconst CompSelector = ({\n  selectedComp,\n  setSelectedComp,\n  setCustomHeight,\n  setAlert,\n}) => {\n  const [units, setUnits] = useState(\"ft\");\n  const [heightFeet, setHeightFeet] = useState(\"\");\n  const [heightInches, setHeightInches] = useState(\"\");\n  const [heightCm, setHeightCm] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  let heightInputPlaceholder;\n  if (units === \"ft\") {\n    heightInputPlaceholder = \"Feet\";\n  } else {\n    heightInputPlaceholder = \"Centimeters\";\n  }\n\n  const convertToInches = (centimeters) => {\n    const totalInches = Math.round(centimeters / 2.54);\n    const feet = Math.floor(totalInches / 12);\n    const inches = totalInches % 12;\n\n    return { feet, inches };\n  };\n\n  const convertToCm = (inches) => {\n    const cm = Math.round(inches * 2.54);\n\n    return cm;\n  };\n\n  const handleCompChange = ({ name, height }) => {\n    setSelectedComp(name);\n    const convertedHeight = convertToInches(height);\n    setHeightFeet(convertedHeight.feet);\n    setHeightInches(convertedHeight.inches);\n    setHeightCm(height);\n\n    if (name === \"Shaq\" || name === \"Giraffe\") {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n      setHeightFeet(\"\");\n      setHeightInches(\"\");\n      setHeightCm(\"\");\n      setCustomHeight(0);\n    }\n  };\n\n  const handleInputChange = ({ event, inputNumber }) => {\n    if (\n      event &&\n      event.target &&\n      event.target.validity &&\n      event.target.validity.valid\n    ) {\n      if (units === \"ft\") {\n        if (inputNumber === 1) {\n          setHeightFeet(+event.target.value);\n        } else {\n          setHeightInches(+event.target.value);\n        }\n      } else {\n        setHeightCm(+event.target.value);\n      }\n    }\n  };\n\n  const handleInputClick = ({ inputNumber }) => {\n    if (units === \"ft\") {\n      if (inputNumber === 1) {\n        setHeightFeet(\"\");\n      } else {\n        setHeightInches(\"\");\n      }\n    } else {\n      setHeightCm(\"\");\n    }\n  };\n\n  const handleSubmit = () => {\n    if (units === \"ft\") {\n      const totalInches = +heightFeet * 12 + +heightInches;\n      if (totalInches > 0) {\n        const feet = Math.floor(totalInches / 12);\n        const inches = totalInches % 12;\n        setHeightFeet(feet);\n        setHeightInches(inches);\n\n        const convertedHeight = convertToCm(totalInches);\n        setHeightCm(convertedHeight);\n        // send custom height to parent\n        setCustomHeight(convertedHeight);\n      } else {\n        triggerAlert();\n        setHeightFeet(\"\");\n        setHeightInches(\"\");\n      }\n      return;\n    } else {\n      if (heightCm > 0) {\n        const convertedHeight = convertToInches(heightCm);\n        setHeightFeet(convertedHeight.feet);\n        setHeightInches(convertedHeight.inches);\n        // send custom height to parent\n        setCustomHeight(heightCm);\n      } else {\n        triggerAlert();\n        setHeightCm(\"\");\n      }\n    }\n  };\n\n  const triggerAlert = () => {\n    setAlert(true);\n    setTimeout(() => setAlert(false), 3000);\n  };\n\n  const displayUnits = units === \"ft\" ? heightFeet : heightCm;\n\n  return (\n    <Container\n      className=\"d-flex justify-content-center\"\n      style={{ marginBottom: \"5vh\" }}\n    >\n      <DropdownButton\n        title={selectedComp}\n        drop=\"up\"\n        variant=\"warning\"\n        style={{ marginRight: \"10px\" }}\n      >\n        <Dropdown.Item\n          onClick={() =>\n            handleCompChange({ name: \"Boy\", height: compHeights.boy })\n          }\n        >\n          Boy\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={() =>\n            handleCompChange({ name: \"Girl\", height: compHeights.girl })\n          }\n        >\n          Girl\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={() =>\n            handleCompChange({ name: \"Shaq\", height: compHeights.shaq })\n          }\n        >\n          Shaq\n        </Dropdown.Item>\n        <Dropdown.Item\n          onClick={() =>\n            handleCompChange({\n              name: \"Giraffe\",\n              height: compHeights.giraffe,\n            })\n          }\n        >\n          Giraffe\n        </Dropdown.Item>\n      </DropdownButton>\n      <InputGroup style={{ width: \"280px\" }}>\n        <FormControl\n          placeholder={heightInputPlaceholder}\n          value={displayUnits}\n          pattern=\"[0-9]*\"\n          onChange={(event) => handleInputChange({ event, inputNumber: 1 })}\n          onClick={() => handleInputClick({ inputNumber: 1 })}\n          disabled={disabled}\n        />\n        {units === \"ft\" && (\n          <FormControl\n            placeholder=\"Inches\"\n            disabled={disabled}\n            value={heightInches}\n            pattern=\"[0-9]*\"\n            max=\"11\"\n            onChange={(event) => handleInputChange({ event, inputNumber: 2 })}\n            onClick={() => handleInputClick({ inputNumber: 2 })}\n          />\n        )}\n        <DropdownButton\n          id=\"unit-selector\"\n          title={units}\n          drop=\"up\"\n          variant=\"secondary\"\n          className=\"height-input\"\n        >\n          <Dropdown.Item onClick={() => setUnits(\"ft\")}>ft</Dropdown.Item>\n          <Dropdown.Item onClick={() => setUnits(\"cm\")}>cm</Dropdown.Item>\n        </DropdownButton>\n        <InputGroup.Append>\n          <Button\n            variant=\"info\"\n            style={{ zIndex: \"0\" }}\n            onClick={() => handleSubmit()}\n          >\n            Submit\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </Container>\n  );\n};\n\nexport default CompSelector;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Spinner, Alert } from \"react-bootstrap\";\nimport \"./App.scss\";\nimport Search from \"./components/Search\";\nimport Footer from \"./components/Footer\";\nimport CompDisplay from \"./components/CompDisplay\";\nimport CompSelector from \"./components/CompSelector\";\n\nconst App = () => {\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedPokemon, setSelectedPokemon] = useState({});\n  const [selectedComp, setSelectedComp] = useState(\"Boy\");\n  const [customHeight, setCustomHeight] = useState(0);\n  const [loading, isLoading] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  useEffect(() => {\n    fetchPokemon();\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const handleClickOutside = (event) => {\n    if (\n      event.target.id !== \"search\" &&\n      event.target.className !== \"sprite\" &&\n      event.target.className !== \"options-container row\"\n    ) {\n      setDisplay(false);\n    }\n  };\n\n  const fetchPokemon = async () => {\n    isLoading(true);\n    const pokemon = [];\n    const promises = new Array(807)\n      .fill()\n      .map((value, index) =>\n        fetch(`https://pokeapi.co/api/v2/pokemon/${index + 1}/`)\n      );\n\n    await Promise.all(promises).then((pokemonArr) => {\n      return pokemonArr.map((response) =>\n        response\n          .json()\n          .then(({ id, name, sprites: { front_default: sprite }, height }) => {\n            const capitalizedName =\n              name.charAt(0).toUpperCase() + name.slice(1);\n            if (sprite === null) {\n              sprite = \"/images/pokeball.jpg\";\n            }\n            pokemon.push({\n              id,\n              name: capitalizedName,\n              sprite,\n              height,\n            });\n            pokemon.sort((a, b) => {\n              return a.id > b.id ? 1 : -1;\n            });\n          })\n      );\n    });\n    setOptions(pokemon);\n    isLoading(false);\n  };\n\n  const setPokedex = (pokemon) => {\n    setSearch(pokemon.name);\n    setSelectedPokemon({\n      id: pokemon.id,\n      name: pokemon.name,\n      height: pokemon.height,\n    });\n    setDisplay(false);\n  };\n\n  let content;\n  if (loading) {\n    content = (\n      <div\n        id=\"spinner-container\"\n        className=\"d-flex align-items-center align-self-center \"\n      >\n        <Spinner animation=\"grow\" variant=\"warning\" />\n      </div>\n    );\n  } else {\n    content = (\n      <Container>\n        <Container className=\"search-container\">\n          <Search\n            display={display}\n            setDisplay={setDisplay}\n            options={options}\n            search={search}\n            setSearch={setSearch}\n            setPokedex={setPokedex}\n          />\n        </Container>\n        <Row>\n          <CompDisplay\n            pokemon={selectedPokemon}\n            selectedComp={selectedComp}\n            customHeight={customHeight}\n          />\n        </Row>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      {content}\n      <div className=\"mt-auto\">\n        {alert && (\n          <div className=\"mx-auto\" id=\"input-alert\">\n            <Alert variant=\"warning\">Please enter height</Alert>\n          </div>\n        )}\n        {!loading && (\n          <CompSelector\n            selectedComp={selectedComp}\n            setSelectedComp={setSelectedComp}\n            setCustomHeight={setCustomHeight}\n            setAlert={setAlert}\n          />\n        )}\n\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}